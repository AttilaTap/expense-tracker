name: CI Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test:
    name: Build, Test, and Run with Docker Compose
    runs-on: ubuntu-22.04

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root1234
          MYSQL_DATABASE: expense_tracker_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Restore .NET dependencies
        run: dotnet restore backend/backend.csproj

      - name: Build .NET project
        run: dotnet build backend/backend.csproj --configuration Release

      - name: Test .NET backend
        run: dotnet test backend/backend.csproj --configuration Release

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Lint frontend
        run: |
          cd frontend
          npm run lint

      - name: Test frontend
        run: |
          cd frontend
          npm run test -- --run

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Docker Compose Build and Run
        run: |
          docker-compose up --build -d
          echo "Waiting for services to be ready..."
          sleep 20
          curl --fail http://localhost:8080/swagger/index.html || (docker-compose logs && exit 1)

      - name: Docker Compose Down
        if: always()
        run: docker-compose down
